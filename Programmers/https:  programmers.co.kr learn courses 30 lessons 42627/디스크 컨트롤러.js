/*
1. 힙의 생성
- 힙은 배열보다는 node객체로 구성된 트리 (트리는 dict로 저장)
- 힙의 insert 메서드 정의
- 힙의 delete 메서드 정의

	-> 힙 정렬로 문제 풀이 (최소 힙, 최소값 하나씩 delete해가면서)

2. 해결해야 될 문제 (이 문제에 특수한 상황)
- 요청시점과 소요시간이 있는데, 이걸 단순히 소요시간 순으로 정렬하면 안됨.
- 요청시점 순으로 정렬하고, 요청시점이 다음작업의 시작 시점보다 앞에 있는 대기열들 중에서 고르는 상황을 가정하고 풀어야 할듯 (대기열에 하나밖에 없거나, 아예 없는 경우는 바로 그 작업 또는 바로 다음 요청시점의 작업을 수행하는게 문제의 조건인듯)
	: "하드디스크가 작업을 수행하고 있지 않을 때에는 먼저 요청이 들어온 작업부터 처리합니다." -> 이 조건의 이해가 제대로 안되어 있음.

*/